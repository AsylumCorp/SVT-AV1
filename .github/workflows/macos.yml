name: macOS
on:
  push:
    paths-ignore:
      - "Docs/*"
      - .travis.yml
      - appveyor.yml
      - .gitignore
      - "*.md"
  pull_request:
    paths-ignore:
      - "Docs/*"
      - .travis.yml
      - appveyor.yml
      - .gitignore
      - "*.md"

jobs:
  build:
    runs-on: macos-10.15
    strategy:
      fail-fast: true
      matrix:
        include:
          - generator: Xcode
          - generator: Unix Makefiles
    steps:
      - uses: actions/checkout@v2
      - name: Cache ccache files
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-${{ matrix.generator }}-${{ hashFiles('**/*.c') }}
          restore-keys: ${{ runner.os }}-${{ matrix.generator }}-
      - name: Install dependencies
        run: |
          set -x
          [ -d ~/.ccache ] && sudo chown -R "$USER": ~/.ccache
          brew update
          brew upgrade -f
          brew install -f yasm ccache cmake
          printf '%s\n' "::set-env name=PATH::/usr/local/opt/ccache/libexec:$PATH" \
            "::set-env name=CCACHE_DIR::$HOME/.ccache"
          clang -v
      - name: Run CMake
        run: cmake -S "$GITHUB_WORKSPACE" -B Build -G"${{ matrix.generator }}" -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF
      - name: Run Install
        run: sudo -E cmake --build Build --parallel "$(sysctl -n hw.ncpu)" --config Release --target install
      - name: Download videos
        if: matrix.generator == 'Unix Makefiles'
        run: |
          for url in raw.githubusercontent.com/OpenVisualCloud/SVT-AV1-Resources/master randomderp.com; do
            curl -LO https://$url/video.tar.gz && break
          done
          tar xf video.tar.gz
      - name: Upload videos
        if: matrix.generator == 'Unix Makefiles'
        uses: actions/upload-artifact@v2
        with:
          name: svtav1-videos
          path: "*.y4m"
      - name: Upload binaries SVT-AV1 (macOS)
        if: matrix.generator == 'Unix Makefiles'
        uses: actions/upload-artifact@v2
        with:
          name: svtav1-macOS-binaries
          path: Bin/Release

  bit-depth-tests:
    name: ${{ matrix.bit }} tests
    runs-on: macos-10.15
    needs: build
    strategy:
      fail-fast: false
      matrix:
        include:
          - bit: 8
            video: akiyo_cif.y4m
          - bit: 10
            video: Chimera-Aerial_480x264_2997fps_10bit_420_150frames.y4m
    steps:
      - name: Download binaries SVT-AV1 (macOS)
        uses: actions/download-artifact@v2
        with:
          name: svtav1-macOS-binaries
      - name: Download videos
        uses: actions/download-artifact@v2
        with:
          name: svtav1-videos
      - name: Print system info
        run: |
          sysctl -n machdep.cpu.brand_string
          sysctl -n machdep.cpu.features machdep.cpu.leaf7_features | sort -u
      - name: ${{ matrix.bit }}bit tests
        run: |
          chmod +x SvtAv1EncApp
          ./SvtAv1EncApp --preset 0 -i ${{ matrix.video }} -n 3 -b test-pr-${{ matrix.bit }}bit-m0.ivf
          ./SvtAv1EncApp --preset 8 -i ${{ matrix.video }} -n 120 -b test-pr-${{ matrix.bit }}bit-m8.ivf

  prep-tests:
    runs-on: [self-hosted, macos]
    name: Build unit tests
    env:
      SVT_AV1_TEST_VECTOR_PATH: ${{ github.workspace }}/test/vectors
    steps:
      - name: Chown whole dir
        run: sudo chown -R "$USER" "${{ github.workspace }}"
      - uses: actions/checkout@v2
        with:
          clean: false
      - name: Install dependencies
        run: |
          [ -d ~/.ccache ] && sudo chown -R "$USER": ~/.ccache
          brew update
          brew upgrade
          brew install yasm ccache cmake ninja
          printf '%s\n' \
            "::set-env name=PATH::/usr/local/opt/ccache/libexec:$PATH" \
            "::set-env name=CCACHE_DIR::$HOME/.ccache"
          clang -v
      - name: Run CMake
        run: |
          cmake -S "$GITHUB_WORKSPACE" -B Build -GNinja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=ON -BBUILD_DEC=OFF -DBUILD_APPS=OFF
          cmake --build Build --config Release --target all --target TestVectors
      - name: Upload unit-tests (macOS)
        uses: actions/upload-artifact@v2
        with:
          name: svtav1-macOS-unittest
          path: Bin/Release

  unit-tests:
    runs-on: [self-hosted, macos]
    needs: prep-tests
    name: Unit Tests (MacOS, Clang)
    env:
      GTEST_TOTAL_SHARDS: 10
    steps:
      - uses: actions/checkout@v2
        with:
          clean: false
      - name: Download unit-tests (macOS)
        uses: actions/download-artifact@v2
        with:
          name: svtav1-macOS-unittest
      - name: Run unit tests
        run: |
          parallel -u -j 4 GTEST_SHARD_INDEX={} ./Bin/Release/SvtAv1UnitTests ::: $(seq 0 $((GTEST_TOTAL_SHARDS - 1)))

  e2e-tests:
    runs-on: [self-hosted, macos]
    needs: prep-tests
    name: E2E Tests (MacOS, Clang)
    env:
      SVT_AV1_TEST_VECTOR_PATH: ${{ github.workspace }}/test/vectors
    steps:
      - uses: actions/checkout@v2
        with:
          clean: false
      - name: Download unit-tests (macOS)
        uses: actions/download-artifact@v2
        with:
          name: svtav1-macOS-unittest
      - name: Run e2e tests
        run: ./Bin/Release/SvtAv1E2ETests --gtest_filter=-*DummySrcTest*
